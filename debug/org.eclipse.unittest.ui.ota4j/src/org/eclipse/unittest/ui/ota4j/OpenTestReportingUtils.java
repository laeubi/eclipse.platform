/*******************************************************************************
 * Copyright (c) 2025 Eclipse contributors and others.
 *
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Eclipse contributors - initial API and implementation
 *******************************************************************************/
package org.eclipse.unittest.ui.ota4j;

import java.io.File;
import java.io.IOException;
import java.io.Reader;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;

import javax.xml.stream.XMLStreamException;

import org.eclipse.unittest.model.ITestRunSession;

/**
 * Utility methods for working with Open Test Reporting files.
 *
 * @since 1.0
 */
public class OpenTestReportingUtils {

	private OpenTestReportingUtils() {
		// Utility class, no instances
	}

	/**
	 * Reads Open Test Reporting events from a file and updates the test session.
	 * <p>
	 * This is a convenience method that creates a {@link OpenTestReportingReader}
	 * and processes the events from the specified file.
	 * </p>
	 *
	 * @param session the test run session to update
	 * @param file    the file containing OTA4J events
	 * @throws IOException        if an I/O error occurs while reading the file
	 * @throws XMLStreamException if an error occurs while parsing the XML
	 */
	public static void readEventsFromFile(ITestRunSession session, File file)
			throws IOException, XMLStreamException {
		try (Reader reader = Files.newBufferedReader(file.toPath(), StandardCharsets.UTF_8)) {
			OpenTestReportingReader ota4jReader = new OpenTestReportingReader(session);
			ota4jReader.readEvents(reader);
		}
	}

	/**
	 * Reads Open Test Reporting events from a file path and updates the test
	 * session.
	 * <p>
	 * This is a convenience method that creates a {@link OpenTestReportingReader}
	 * and processes the events from the specified file path.
	 * </p>
	 *
	 * @param session  the test run session to update
	 * @param filePath the path to the file containing OTA4J events
	 * @throws IOException        if an I/O error occurs while reading the file
	 * @throws XMLStreamException if an error occurs while parsing the XML
	 */
	public static void readEventsFromFile(ITestRunSession session, String filePath)
			throws IOException, XMLStreamException {
		readEventsFromFile(session, new File(filePath));
	}
}
